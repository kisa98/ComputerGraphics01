용어 정리
- 주의할 것 - 
사전적 정의를 정의하는 것보다 본인이 해본 경험을 바탕으로 해당 단어를 설명하기 위해 노력할 것.
위 설명이 어려울 경우, 사전적 정의라도 이야기 할 수 있어야함.

API(어플리케이션 프로그래밍 인터페이스):
인터페이스 : 어떤 대상과 상호작용하기 위한 무엇
ㄴ프로그래밍: 함수, 라이브러리
ㄴ클래스: 설계를 한대로 코드를 작성하도록 제약하는 것


객체 지향 언어가 대두된 이유: 객체화 되어있으면, 해당 객체를 찾아서 필요한 관련 함수를 찾아보면 되기때문.
객체 지향: 객체를 기본 단위로 접근하는 방식
WinAPI: 함수로 구성되어 있음.
MFC(Microsoft Foundation Classes - 마이크로소프트 기본 클래스): WinAPI의 함수를 클래스 형태로 제공하는 것. (도구도 지원함)


(진짜로 알 수는 있음)
->함수 포인터를 넘기면 필요할 때, 플랫폼에서 처리함.
플랫폼: 서비스를 제공하는 주체. 예)카카오, 네이버 등
ㄴ소프트웨어에서는: 운영체제, SDK 예)윈도우, 안드로이드, 유니티, 언리얼, 아마존클라우드, 애저
운영체제: 기기와 상관없이 운영체제가 설치되면 소프트웨어를 사용할 수 있음.
ㄴ드라이버: 운영 체제에 맞게 하드웨어를 사용할 수 있도록 돕는 프로그램
오락실 게임기는 기판으로 제작됨. 하드웨어에 맞춰서 코드를 작성하는 시대.
기판: 오락기에 게임이 들어가있는 기판.
콘솔:
크로스플랫폼:

빌드: 사용할 기기에 맞게 프로그램을 실행할 수 있게 컴파일하는 것.
클라우드: 어떤 서비스를 제공하는 것인데, 그 세부 로직은 중요하지 않음. 
클라우드 게임 서비스: 게임 서비스를 제공하는데, 하드웨어없이 클라우드 서비스 아래에서 게임이 제공됨.

D3D의 대두 : 풀 스크린 모드를 지원하여 모든 하드웨어를 게임이 온전하기 활용할 수 있도록 만듬.

SDK: 소프트웨어 개발 도구

콜: 함수 호출
콜백: 알수 없는 곳에서 호출되고 있는 것(함수일 확률이 높음)(참조 찾기 하면 정의만 있고, 호출하는 데가 없음)
콜백함수: 주로 함수의 인자로 넘겨서 사용하기 위해 설계된 함수, 보통 그 함수는 사용자 관리 밖(즉, 뒷편)에서 불리는 경우가 많음. 그 콜백으로 만들어진 함수

동적 바인딩: 프로그램 실행 이후에 기능이 결정되는 것. (동적 할당된 메모리에 따라 다름)
정적 바인딩: 프로그램 실행(컴파일) 이전에 함수의 기능이 결정되는 것.

함수 포인터: 콜백을 만들기 위해 존재하는 포인터(함수의 주소 포인터를 저장함)
백도어: 정상적인 루트가 아닌 우회 루트. 해킹할 때 활용한다.

핸들러: 이벤트가 발생하는 조건을 지정하는 것.
이벤트: 이전 상태와 달라지는 것. 어떤 사건이 발생하는 것
ㄴWinAPI: 메세지(핸들러)를 발생시켜, 해당 핸들러일 경우 이벤트를 처리하도록 함
ㄴMFC: 
메시지: 운영 체제가 어떤 상황이 되면 보내주는 것.
WM_CREATE: 창이 생성될 때
WM_COMMAND, 버튼이 눌러질 때
WM_PAINT: 창이 갱신될 때, 다시 그려질 때 (최소화, 창을 다른 디스플레이로 옮길 때) 메시지가 발생함.
WM_DESTROY: 종료될 때

DLL: 
헝가리안 표기: